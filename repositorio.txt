<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Repositorio Acad√©mico Digital</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            min-height: 100vh;
            color: #333;
            line-height: 1.6;
        }

        /* LOGIN STYLES */
        .login-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 2rem;
        }

        .login-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 3rem;
            box-shadow: 0 20px 40px rgba(0,0,0,0.2);
            width: 100%;
            max-width: 400px;
            text-align: center;
        }

        .login-header {
            margin-bottom: 2rem;
        }

        .login-header h1 {
            color: #2c3e50;
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }

        .login-header p {
            color: #666;
            font-size: 1rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
            text-align: left;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: #333;
            font-weight: 500;
        }

        .form-input {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
        }

        .form-input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        .login-btn {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, #3498db, #2c3e50);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .login-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(52, 152, 219, 0.3);
        }

        /* MAIN APP STYLES */
        .app-container {
            display: none;
        }

        .app-container.active {
            display: block;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 1.5rem 2rem;
            border-radius: 15px;
            color: white;
        }

        .header-left h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
        }

        .header-left p {
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .header-right {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .user-info {
            text-align: right;
        }

        .user-role {
            background: rgba(255, 255, 255, 0.2);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
        }

        .logout-btn {
            background: rgba(231, 76, 60, 0.8);
            color: white;
            border: none;
            padding: 0.7rem 1.5rem;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .logout-btn:hover {
            background: rgba(231, 76, 60, 1);
            transform: translateY(-2px);
        }

        .controls-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            gap: 2rem;
            flex-wrap: wrap;
        }

        .search-container {
            flex: 1;
            min-width: 300px;
        }

        .search-box {
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 1rem 3rem 1rem 1rem;
            border: none;
            border-radius: 50px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            font-size: 1rem;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
        }

        .search-btn {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: #3498db;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            color: white;
            cursor: pointer;
        }

        .filters {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 0.7rem 1.5rem;
            border: 2px solid rgba(255,255,255,0.3);
            background: rgba(255,255,255,0.1);
            color: white;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .filter-btn:hover,
        .filter-btn.active {
            background: rgba(255,255,255,0.2);
            border-color: rgba(255,255,255,0.5);
        }

        .upload-section {
            background: rgba(255,255,255,0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .upload-section.hidden {
            display: none;
        }

        .upload-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .cloud-selector {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .cloud-btn {
            padding: 0.7rem 1.5rem;
            border: 2px solid #e0e0e0;
            background: white;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .cloud-btn.active {
            border-color: #3498db;
            background: rgba(52, 152, 219, 0.1);
            color: #3498db;
        }

        .upload-area {
            border: 2px dashed #ccc;
            border-radius: 15px;
            padding: 3rem;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .upload-area:hover,
        .upload-area.dragover {
            border-color: #3498db;
            background: rgba(52, 152, 219, 0.05);
        }

        .documents-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .document-card {
            background: rgba(255,255,255,0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            position: relative;
        }

        .document-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.15);
        }

        .document-header {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .document-icon {
            font-size: 2.5rem;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 15px;
            background: rgba(52, 152, 219, 0.1);
        }

        .document-info {
            flex: 1;
        }

        .document-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .document-meta {
            font-size: 0.9rem;
            color: #666;
        }

        .document-type {
            background: #3498db;
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
            margin-bottom: 1rem;
            display: inline-block;
        }

        .document-description {
            color: #555;
            margin-bottom: 1.5rem;
            line-height: 1.6;
        }

        .document-actions {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .btn {
            padding: 0.7rem 1.3rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, #3498db, #2c3e50);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.4);
        }

        .btn-danger {
            background: #e74c3c;
            color: white;
        }

        .btn-danger:hover {
            background: #c0392b;
            transform: translateY(-2px);
        }

        .btn-secondary {
            background: #95a5a6;
            color: white;
        }

        .btn-secondary:hover {
            background: #7f8c8d;
            transform: translateY(-2px);
        }

        .admin-only {
            display: none;
        }

        .admin-only.show {
            display: block;
        }

        .stats-section {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255,255,255,0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            color: #3498db;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #666;
            font-size: 1rem;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.8);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            max-width: 500px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #eee;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #666;
        }

        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }
            
            .header {
                flex-direction: column;
                gap: 1rem;
            }
            
            .controls-section {
                flex-direction: column;
            }
            
            .documents-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-section {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- LOGIN SECTION -->
    <div class="login-container" id="loginSection">
        <div class="login-card">
            <div class="login-header">
                <h1>üìö Repositorio Acad√©mico</h1>
                <p>Sistema de Gesti√≥n de Documentos Acad√©micos</p>
            </div>
            
            <form id="loginForm">
                <div class="form-group">
                    <label for="username">Usuario</label>
                    <input type="text" id="username" class="form-input" required>
                </div>
                
                <div class="form-group">
                    <label for="password">Contrase√±a</label>
                    <input type="password" id="password" class="form-input" required>
                </div>
                
                <button type="submit" class="login-btn">Iniciar Sesi√≥n</button>
            </form>
            
            <div style="margin-top: 2rem; padding-top: 1rem; border-top: 1px solid #eee; font-size: 0.9rem; color: #666;">
                <p><strong>Credenciales de prueba:</strong></p>
                <p>üë®‚Äçüíº Admin: admin / admin123</p>
                <p>üë§ Usuario: usuario / user123</p>
            </div>
        </div>
    </div>

    <!-- MAIN APP -->
    <div class="app-container" id="appContainer">
        <div class="container">
            <header class="header">
                <div class="header-left">
                    <h1>üìö Repositorio Acad√©mico</h1>
                    <p>Gesti√≥n centralizada de proyectos, tesis e investigaciones</p>
                </div>
                <div class="header-right">
                    <div class="user-info">
                        <div id="currentUser">Usuario</div>
                        <div class="user-role" id="userRole">Invitado</div>
                    </div>
                    <button class="logout-btn" onclick="logout()">Cerrar Sesi√≥n</button>
                </div>
            </header>

            <!-- ESTAD√çSTICAS -->
            <div class="stats-section">
                <div class="stat-card">
                    <div class="stat-number" id="totalDocs">0</div>
                    <div class="stat-label">Total Documentos</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="totalTesis">0</div>
                    <div class="stat-label">Tesis</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="totalProyectos">0</div>
                    <div class="stat-label">Proyectos</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="totalInvestigaciones">0</div>
                    <div class="stat-label">Investigaciones</div>
                </div>
            </div>

            <!-- CONTROLES -->
            <div class="controls-section">
                <div class="search-container">
                    <div class="search-box">
                        <input type="text" class="search-input" placeholder="Buscar documentos, autores, palabras clave..." id="searchInput">
                        <button class="search-btn" onclick="searchDocuments()">üîç</button>
                    </div>
                </div>
                <div class="filters">
                    <button class="filter-btn active" data-filter="all">Todos</button>
                    <button class="filter-btn" data-filter="tesis">Tesis</button>
                    <button class="filter-btn" data-filter="proyecto">Proyectos</button>
                    <button class="filter-btn" data-filter="investigacion">Investigaciones</button>
                </div>
            </div>

            <!-- SECCI√ìN DE SUBIDA (Solo Admin) -->
            <div class="upload-section admin-only" id="uploadSection">
                <div class="upload-header">
                    <h3>üì§ Subir Nuevo Documento</h3>
                    <button class="btn btn-secondary" onclick="toggleUploadForm()">Formulario Detallado</button>
                </div>
                
                <div class="cloud-selector">
                    <button class="cloud-btn active" data-cloud="gdrive">
                        <span>üìÅ</span> Google Drive
                    </button>
                    <button class="cloud-btn" data-cloud="onedrive">
                        <span>‚òÅÔ∏è</span> OneDrive
                    </button>
                </div>
                
                <div class="upload-area" onclick="document.getElementById('fileInput').click()">
                    <div style="font-size: 3rem; margin-bottom: 1rem;">üìÑ</div>
                    <p style="font-size: 1.2rem; margin-bottom: 0.5rem;">Arrastra documentos aqu√≠ o haz clic para seleccionar</p>
                    <p style="color: #666;">Soporta: PDF, DOC, DOCX, PPT, PPTX, XLS, XLSX</p>
                    <input type="file" id="fileInput" style="display: none;" multiple accept=".pdf,.doc,.docx,.ppt,.pptx,.xls,.xlsx">
                </div>
            </div>

            <!-- GRID DE DOCUMENTOS -->
            <div class="documents-grid" id="documentsGrid">
                <!-- Los documentos se generar√°n din√°micamente -->
            </div>
        </div>
    </div>

    <!-- MODAL PARA DETALLES -->
    <div class="modal" id="detailModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Detalles del Documento</h3>
                <button class="close-btn" onclick="closeModal()">&times;</button>
            </div>
            <div id="modalBody">
                <!-- Contenido din√°mico -->
            </div>
        </div>
    </div>

    <!-- MODAL FORMULARIO DE SUBIDA -->
    <div class="modal" id="uploadModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>üìù Informaci√≥n del Documento</h3>
                <button class="close-btn" onclick="closeUploadModal()">&times;</button>
            </div>
            <form id="documentForm">
                <div class="form-group">
                    <label>T√≠tulo</label>
                    <input type="text" id="docTitle" class="form-input" required>
                </div>
                <div class="form-group">
                    <label>Autor(es)</label>
                    <input type="text" id="docAuthor" class="form-input" required>
                </div>
                <div class="form-group">
                    <label>Tipo de Documento</label>
                    <select id="docType" class="form-input" required>
                        <option value="tesis">Tesis</option>
                        <option value="proyecto">Proyecto</option>
                        <option value="investigacion">Investigaci√≥n</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>A√±o</label>
                    <input type="number" id="docYear" class="form-input" min="1900" max="2030" required>
                </div>
                <div class="form-group">
                    <label>Palabras Clave (separadas por comas)</label>
                    <input type="text" id="docKeywords" class="form-input">
                </div>
                <div class="form-group">
                    <label>Resumen/Descripci√≥n</label>
                    <textarea id="docDescription" class="form-input" rows="4" required></textarea>
                </div>
                <div style="display: flex; gap: 1rem; justify-content: flex-end; margin-top: 2rem;">
                    <button type="button" class="btn btn-secondary" onclick="closeUploadModal()">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar Documento</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Sistema de autenticaci√≥n y datos
        let currentUser = null;
        let isAdmin = false;
        let selectedCloudService = 'gdrive';

        // Usuarios del sistema
        const users = {
            'admin': { password: 'admin123', role: 'admin', name: 'Administrador' },
            'usuario': { password: 'user123', role: 'user', name: 'Usuario' }
        };

        // Base de datos simulada de documentos
        let documents = [
            {
                id: 1,
                title: "An√°lisis de Algoritmos de Machine Learning en Sistemas Distribuidos",
                author: "Dr. Mar√≠a Garc√≠a, Ing. Juan P√©rez",
                type: "tesis",
                year: 2024,
                keywords: ["machine learning", "sistemas distribuidos", "algoritmos", "big data"],
                description: "Investigaci√≥n exhaustiva sobre la implementaci√≥n y optimizaci√≥n de algoritmos de aprendizaje autom√°tico en entornos distribuidos, con especial √©nfasis en la escalabilidad y rendimiento.",
                cloudService: "gdrive",
                fileUrl: "#",
                uploadDate: "2024-08-10",
                fileSize: "2.3 MB",
                fileType: "pdf"
            },
            {
                id: 2,
                title: "Desarrollo de Aplicaci√≥n Web para Gesti√≥n Hospitalaria",
                author: "Ana L√≥pez, Carlos Mart√≠n",
                type: "proyecto",
                year: 2024,
                keywords: ["desarrollo web", "gesti√≥n hospitalaria", "base de datos", "frontend"],
                description: "Proyecto integral que incluye el dise√±o y desarrollo de una plataforma web completa para la administraci√≥n eficiente de recursos hospitalarios y gesti√≥n de pacientes.",
                cloudService: "onedrive",
                fileUrl: "#",
                uploadDate: "2024-08-05",
                fileSize: "5.7 MB",
                fileType: "pdf"
            },
            {
                id: 3,
                title: "Impacto de la Inteligencia Artificial en la Educaci√≥n Superior",
                author: "Prof. Roberto Silva, Dra. Carmen Ruiz",
                type: "investigacion",
                year: 2023,
                keywords: ["inteligencia artificial", "educaci√≥n", "pedagog√≠a", "tecnolog√≠a educativa"],
                description: "Estudio longitudinal sobre los efectos de la implementaci√≥n de herramientas de IA en procesos educativos universitarios y su impacto en el rendimiento acad√©mico.",
                cloudService: "gdrive",
                fileUrl: "#",
                uploadDate: "2024-07-28",
                fileSize: "4.1 MB",
                fileType: "pdf"
            },
            {
                id: 4,
                title: "Optimizaci√≥n de Procesos Industriales mediante IoT",
                author: "Ing. Patricia Morales",
                type: "tesis",
                year: 2023,
                keywords: ["IoT", "industria 4.0", "optimizaci√≥n", "sensores", "automatizaci√≥n"],
                description: "Tesis doctoral que propone un modelo innovador para la optimizaci√≥n de procesos manufactureros utilizando dispositivos IoT y an√°lisis de datos en tiempo real.",
                cloudService: "onedrive",
                fileUrl: "#",
                uploadDate: "2024-07-15",
                fileSize: "3.8 MB",
                fileType: "pdf"
            },
            {
                id: 5,
                title: "Sistema de Recomendaci√≥n Basado en Comportamiento de Usuario",
                author: "Miguel Hern√°ndez, Sofia Torres",
                type: "proyecto",
                year: 2024,
                keywords: ["sistemas de recomendaci√≥n", "an√°lisis de comportamiento", "algoritmos", "UX"],
                description: "Desarrollo e implementaci√≥n de un sistema inteligente de recomendaciones que analiza patrones de comportamiento del usuario para personalizar contenido y experiencias.",
                cloudService: "gdrive",
                fileUrl: "#",
                uploadDate: "2024-08-01",
                fileSize: "1.9 MB",
                fileType: "pdf"
            }
        ];

        // Funciones de autenticaci√≥n
        function handleLogin(event) {
            event.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            if (users[username] && users[username].password === password) {
                currentUser = users[username];
                isAdmin = currentUser.role === 'admin';
                
                document.getElementById('currentUser').textContent = currentUser.name;
                document.getElementById('userRole').textContent = isAdmin ? 'Administrador' : 'Usuario';
                
                // Mostrar/ocultar elementos seg√∫n el rol
                const adminElements = document.querySelectorAll('.admin-only');
                adminElements.forEach(el => {
                    if (isAdmin) {
                        el.classList.add('show');
                    } else {
                        el.classList.remove('show');
                    }
                });

                document.getElementById('loginSection').style.display = 'none';
                document.getElementById('appContainer').classList.add('active');
                
                loadDocuments();
                updateStats();
            } else {
                alert('Credenciales incorrectas. Por favor, verifica tu usuario y contrase√±a.');
            }
        }

        function logout() {
            currentUser = null;
            isAdmin = false;
            document.getElementById('loginSection').style.display = 'flex';
            document.getElementById('appContainer').classList.remove('active');
            document.getElementById('loginForm').reset();
        }

        // Funciones de gesti√≥n de documentos
        function loadDocuments(filteredDocs = documents) {
            const grid = document.getElementById('documentsGrid');
            grid.innerHTML = '';

            filteredDocs.forEach(doc => {
                const card = createDocumentCard(doc);
                grid.appendChild(card);
            });
        }

        function createDocumentCard(doc) {
            const card = document.createElement('div');
            card.className = 'document-card';

            const typeLabels = {
                'tesis': 'Tesis',
                'proyecto': 'Proyecto',
                'investigacion': 'Investigaci√≥n'
            };

            const iconMap = {
                'tesis': 'üéì',
                'proyecto': 'üíº',
                'investigacion': 'üî¨'
            };

            card.innerHTML = `
                <div class="document-header">
                    <div class="document-icon">${iconMap[doc.type]}</div>
                    <div class="document-info">
                        <div class="document-title">${doc.title}</div>
                        <div class="document-meta">
                            üìÖ ${doc.year} | üë§ ${doc.author} | üìÅ ${doc.fileSize}
                        </div>
                    </div>
                </div>
                
                <div class="document-type">${typeLabels[doc.type]}</div>
                
                <div class="document-description">${doc.description.length > 150 ? doc.description.substring(0, 150) + '...' : doc.description}</div>
                
                <div class="document-actions">
                    <button class="btn btn-primary" onclick="viewDocument(${doc.id})">
                        üëÅÔ∏è Ver Detalles
                    </button>
                    <button class="btn btn-secondary" onclick="downloadDocument(${doc.id})">
                        ‚¨áÔ∏è Descargar
                    </button>
                    ${isAdmin ? `<button class="btn btn-danger" onclick="deleteDocument(${doc.id})">üóëÔ∏è Eliminar</button>` : ''}
                </div>
            `;

            return card;
        }

        function searchDocuments() {
            const query = document.getElementById('searchInput').value.toLowerCase();
            const activeFilter = document.querySelector('.filter-btn.active').dataset.filter;
            
            let filtered = documents.filter(doc => {
                const matchesSearch = doc.title.toLowerCase().includes(query) ||
                    doc.author.toLowerCase().includes(query) ||
                    doc.description.toLowerCase().includes(query) ||
                    doc.keywords.some(keyword => keyword.toLowerCase().includes(query));
                
                const matchesFilter = activeFilter === 'all' || doc.type === activeFilter;
                
                return matchesSearch && matchesFilter;
            });
            
            loadDocuments(filtered);
        }

        function updateStats() {
            const totalDocs = documents.length;
            const totalTesis = documents.filter(doc => doc.type === 'tesis').length;
            const totalProyectos = documents.filter(doc => doc.type === 'proyecto').length;
            const totalInvestigaciones = documents.filter(doc => doc.type === 'investigacion').length;

            document.getElementById('totalDocs').textContent = totalDocs;
            document.getElementById('totalTesis').textContent = totalTesis;
            document.getElementById('totalProyectos').textContent = totalProyectos;
            document.getElementById('totalInvestigaciones').textContent = totalInvestigaciones;
        }

        function viewDocument(id) {
            const doc = documents.find(d => d.id === id);
            if (!doc) return;

            const modalBody = document.getElementById('modalBody');
            modalBody.innerHTML = `
                <div style="margin-bottom: 2rem;">
                    <h2 style="color: #2c3e50; margin-bottom: 1rem;">${doc.title}</h2>
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1.5rem; font-size: 0.95rem;">
                        <div><strong>üìù Autor(es):</strong> ${doc.author}</div>
                        <div><strong>üìÖ A√±o:</strong> ${doc.year}</div>
                        <div><strong>üìÇ Tipo:</strong> ${doc.type.charAt(0).toUpperCase() + doc.type.slice(1)}</div>
                        <div><strong>‚òÅÔ∏è Almacenado en:</strong> ${doc.cloudService === 'gdrive' ? 'Google Drive' : 'OneDrive'}</div>
                        <div><strong>üìÅ Tama√±o:</strong> ${doc.fileSize}</div>
                        <div><strong>üìÜ Subido:</strong> ${new Date(doc.uploadDate).toLocaleDateString('es-ES')}</div>
                    </div>
                    
                    <div style="margin-bottom: 1.5rem;">
                        <strong>üîç Palabras Clave:</strong>
                        <div style="margin-top: 0.5rem;">
                            ${doc.keywords.map(keyword => `<span style="background: #ecf0f1; padding: 0.25rem 0.75rem; border-radius: 15px; margin-right: 0.5rem; font-size: 0.85rem;">${keyword}</span>`).join('')}
                        </div>
                    </div>
                    
                    <div style="margin-bottom: 2rem;">
                        <strong>üìã Descripci√≥n:</strong>
                        <p style="margin-top: 0.5rem; line-height: 1.6; color: #555;">${doc.description}</p>
                    </div>
                    
                    <div style="display: flex; gap: 1rem; justify-content: center;">
                        <button class="btn btn-primary" onclick="downloadDocument(${doc.id})">
                            ‚¨áÔ∏è Descargar Documento
                        </button>
                        <button class="btn btn-secondary" onclick="openInCloud(${doc.id})">
                            ‚òÅÔ∏è Abrir en ${doc.cloudService === 'gdrive' ? 'Drive' : 'OneDrive'}
                        </button>
                    </div>
                </div>
            `;
            
            document.getElementById('detailModal').classList.add('active');
        }

        function downloadDocument(id) {
            const doc = documents.find(d => d.id === id);
            if (!doc) return;
            
            // Simular descarga
            alert(`üì• Descargando: "${doc.title}"\n\nEn una implementaci√≥n real, esto iniciar√≠a la descarga desde ${doc.cloudService === 'gdrive' ? 'Google Drive' : 'OneDrive'}.`);
            
            // Aqu√≠ implementar√≠as la l√≥gica real de descarga desde la API de Google Drive o OneDrive
            console.log(`Descargando documento ${id} desde ${doc.cloudService}`);
        }

        function deleteDocument(id) {
            if (!isAdmin) {
                alert('‚ùå Solo los administradores pueden eliminar documentos.');
                return;
            }

            const doc = documents.find(d => d.id === id);
            if (!doc) return;

            if (confirm(`¬øEst√°s seguro de que deseas eliminar "${doc.title}"?\n\n‚ö†Ô∏è Esta acci√≥n no se puede deshacer.`)) {
                // Simular eliminaci√≥n del cloud storage
                documents = documents.filter(d => d.id !== id);
                loadDocuments();
                updateStats();
                alert(`üóëÔ∏è Documento "${doc.title}" eliminado exitosamente.`);
                
                // Aqu√≠ implementar√≠as la eliminaci√≥n real del archivo en Google Drive/OneDrive
                console.log(`Eliminando documento ${id} de ${doc.cloudService}`);
            }
        }

        function openInCloud(id) {
            const doc = documents.find(d => d.id === id);
            if (!doc) return;
            
            // Simular apertura en servicio cloud
            alert(`üåê Abriendo documento en ${doc.cloudService === 'gdrive' ? 'Google Drive' : 'OneDrive'}...\n\nEn una implementaci√≥n real, esto abrir√≠a el documento directamente en el navegador.`);
            
            // En la implementaci√≥n real, esto abrir√≠a la URL del documento
            // window.open(doc.fileUrl, '_blank');
        }

        // Funciones de subida de archivos
        function handleFileUpload(files) {
            if (!isAdmin) {
                alert('‚ùå Solo los administradores pueden subir archivos.');
                return;
            }

            const allowedTypes = ['.pdf', '.doc', '.docx', '.ppt', '.pptx', '.xls', '.xlsx'];
            const validFiles = Array.from(files).filter(file => {
                const extension = '.' + file.name.split('.').pop().toLowerCase();
                return allowedTypes.includes(extension);
            });

            if (validFiles.length === 0) {
                alert('‚ùå Por favor, selecciona archivos v√°lidos (PDF, DOC, DOCX, PPT, PPTX, XLS, XLSX).');
                return;
            }

            if (validFiles.length === 1) {
                // Abrir modal para un solo archivo
                currentUploadFile = validFiles[0];
                document.getElementById('uploadModal').classList.add('active');
            } else {
                // Para m√∫ltiples archivos, proceso autom√°tico
                processMultipleFiles(validFiles);
            }
        }

        function processMultipleFiles(files) {
            const uploadPromises = files.map(file => {
                return new Promise((resolve) => {
                    // Simular subida a cloud storage
                    setTimeout(() => {
                        const newDoc = {
                            id: Date.now() + Math.random(),
                            title: file.name.replace(/\.[^/.]+$/, ""),
                            author: "Autor no especificado",
                            type: "proyecto", // Tipo por defecto
                            year: new Date().getFullYear(),
                            keywords: ["documento", "subido"],
                            description: "Documento subido autom√°ticamente. Editar detalles desde el panel de administraci√≥n.",
                            cloudService: selectedCloudService,
                            fileUrl: "#",
                            uploadDate: new Date().toISOString().split('T')[0],
                            fileSize: (file.size / 1024 / 1024).toFixed(1) + " MB",
                            fileType: file.name.split('.').pop().toLowerCase()
                        };
                        
                        documents.push(newDoc);
                        resolve(newDoc);
                    }, 1000);
                });
            });

            Promise.all(uploadPromises).then(() => {
                loadDocuments();
                updateStats();
                alert(`‚úÖ ${files.length} archivo(s) subido(s) exitosamente a ${selectedCloudService === 'gdrive' ? 'Google Drive' : 'OneDrive'}.`);
            });
        }

        function handleDocumentSubmit(event) {
            event.preventDefault();
            
            const newDoc = {
                id: Date.now(),
                title: document.getElementById('docTitle').value,
                author: document.getElementById('docAuthor').value,
                type: document.getElementById('docType').value,
                year: parseInt(document.getElementById('docYear').value),
                keywords: document.getElementById('docKeywords').value.split(',').map(k => k.trim()).filter(k => k),
                description: document.getElementById('docDescription').value,
                cloudService: selectedCloudService,
                fileUrl: "#",
                uploadDate: new Date().toISOString().split('T')[0],
                fileSize: currentUploadFile ? (currentUploadFile.size / 1024 / 1024).toFixed(1) + " MB" : "N/A",
                fileType: currentUploadFile ? currentUploadFile.name.split('.').pop().toLowerCase() : "pdf"
            };

            documents.push(newDoc);
            loadDocuments();
            updateStats();
            closeUploadModal();
            
            alert(`‚úÖ Documento "${newDoc.title}" subido exitosamente a ${selectedCloudService === 'gdrive' ? 'Google Drive' : 'OneDrive'}.`);
            
            // Aqu√≠ implementar√≠as la subida real al servicio cloud
            console.log('Subiendo archivo a', selectedCloudService, newDoc);
        }

        // Funciones de modal y UI
        function closeModal() {
            document.getElementById('detailModal').classList.remove('active');
        }

        function toggleUploadForm() {
            document.getElementById('uploadModal').classList.add('active');
        }

        function closeUploadModal() {
            document.getElementById('uploadModal').classList.remove('active');
            document.getElementById('documentForm').reset();
            currentUploadFile = null;
        }

        // Variables globales
        let currentUploadFile = null;

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Login form
            document.getElementById('loginForm').addEventListener('submit', handleLogin);
            
            // Document form
            document.getElementById('documentForm').addEventListener('submit', handleDocumentSubmit);
            
            // Search input
            document.getElementById('searchInput').addEventListener('input', searchDocuments);
            
            // Filter buttons
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    searchDocuments();
                });
            });
            
            // Cloud service selector
            document.querySelectorAll('.cloud-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    document.querySelectorAll('.cloud-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    selectedCloudService = this.dataset.cloud;
                });
            });
            
            // File input
            document.getElementById('fileInput').addEventListener('change', function(e) {
                handleFileUpload(e.target.files);
            });
            
            // Drag and drop
            const uploadArea = document.querySelector('.upload-area');
            
            uploadArea.addEventListener('dragover', (e) => {
                e.preventDefault();
                uploadArea.classList.add('dragover');
            });
            
            uploadArea.addEventListener('dragleave', () => {
                uploadArea.classList.remove('dragover');
            });
            
            uploadArea.addEventListener('drop', (e) => {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
                handleFileUpload(e.dataTransfer.files);
            });
            
            // Close modals on outside click
            window.addEventListener('click', function(e) {
                if (e.target.classList.contains('modal')) {
                    e.target.classList.remove('active');
                }
            });
        });

        // Funciones adicionales para integraci√≥n con APIs reales
        
        // Google Drive API Integration (placeholder)
        function uploadToGoogleDrive(file, metadata) {
            // Implementar con Google Drive API
            console.log('Uploading to Google Drive:', file.name, metadata);
            /*
            Ejemplo de implementaci√≥n real:
            
            const formData = new FormData();
            formData.append('file', file);
            formData.append('metadata', JSON.stringify(metadata));
            
            fetch('/api/upload/gdrive', {
                method: 'POST',
                body: formData,
                headers: {
                    'Authorization': 'Bearer ' + getAccessToken()
                }
            })
            .then(response => response.json())
            .then(data => {
                console.log('Upload successful:', data);
            });
            */
        }
        
        // OneDrive API Integration (placeholder)
        function uploadToOneDrive(file, metadata) {
            // Implementar con OneDrive API
            console.log('Uploading to OneDrive:', file.name, metadata);
            /*
            Ejemplo de implementaci√≥n real:
            
            const uploadSession = await fetch('/api/upload/onedrive/session', {
                method: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + getAccessToken(),
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    filename: file.name,
                    size: file.size
                })
            });
            
            const { uploadUrl } = await uploadSession.json();
            
            // Upload file in chunks
            await fetch(uploadUrl, {
                method: 'PUT',
                body: file
            });
            */
        }
    </script>
</body>
</html>